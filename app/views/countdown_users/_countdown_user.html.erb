<div id="countdown_user_<%=countdown_user.id%>">
<h2>
	<%=countdown_user.timer_title || "Untitled"%>
</h2>
<p class="lead">
	<% 
		#TODO move this stuff into a helper
		time_difference = Countdown::TimeDifference.new(Time.parse(countdown_user.time), Time.new) 
		countdown_datetime = Time.parse(countdown_user.time)
	%>
	<%if time_difference.time_difference > 0%>
	This countdown is set to expire in <b><%=time_difference.to_s%></b>, 
	<%else%>
	This count expired 
	<%end%>
	at <strong><%=countdown_datetime.strftime("%I:%M:%S %p")%></strong> on <strong><%=countdown_datetime.strftime("%A, %B %d")%></strong>.
</p> 
<%= form_for(countdown_user, remote: true, html: {class: "form-horizontal"}) do |f| %>
<div class="control-group">
	<%=f.label :timer_title, class: "control-label" %>
	<div class="controls">
		<%=f.text_field :timer_title %>
	</div>
</div>
<div class="control-group">
	<div class="controls">
		<%=f.submit "Update", class: 'btn btn-primary' %>
	</div>
</div>
<% end%>	
<form class="form-horizontal">
<div class="control-group">
	<div class="controls">
<%= link_to 'Delete', countdown_user, class: 'btn btn-danger', method: :delete, data: { confirm: 'Are you sure?' } %>
<%= link_to 'Notify me when this timer will expire', url_for(action: 'setup_scheduled_email', id: countdown_user), class: 'btn btn-primary' if countdown_user.user_scheduled_email.nil? %>
<%= link_to 'Cancel scheduled notification', url_for(action: 'remove_scheduled_email', id: countdown_user), class: 'btn btn-primary', data: {confirm: 'Are you sure?'} unless countdown_user.user_scheduled_email.nil? %>
	</div>
</div>
</form>
</div>
<hr/>